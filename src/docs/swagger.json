{
  "openapi": "3.0.0",
  "info": {
    "title": "AGUKA API",
    "version": "1.0.0",
    "description": "A COMMUNITY SAVING API MANAGEMENT",
    "contact": {
      "name": "API Support",
      "email": "yvanox467@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    { "url": "http://localhost:3000/api" }
  ],
  "tags": [
    { "name": "Authentication", "description": "Login, OAuth, and profile management" },
    { "name": "Users", "description": "User management and profile operations" },
    { "name": "Loans", "description": "Loan request, approval, and tracking" }
  ],
  "paths": {
    "/auth/google": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Google OAuth login",
        "description": "Redirects user to Google for authentication.",
        "responses": { "302": { "description": "Redirect to Google OAuth" } }
      }
    },
    "/auth/google/callback": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Google OAuth callback",
        "description": "Handles Google OAuth callback and logs in user.",
        "responses": {
          "200": { "description": "Successful login" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "List of users" } }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/User" } }
          }
        },
        "responses": { "201": { "description": "User created" } }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User found" },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/User" } }
          }
        },
        "responses": {
          "200": { "description": "User updated" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "204": { "description": "User deleted" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/users/complete-profile": {
      "put": {
        "tags": ["Users"],
        "summary": "Complete user profile",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": { "type": "string" },
                  "groupId": { "type": "string" }
                },
                "required": ["phoneNumber", "groupId"]
              }
            }
          }
        },
        "responses": { "200": { "description": "Profile completed" } }
      }
    },

    "/loans/request": {
      "post": {
        "tags": ["Loans"],
        "summary": "Request a loan",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": { "type": "number" },
                  "durationMonths": { "type": "integer" }
                },
                "required": ["amount", "durationMonths"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Loan requested successfully", "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" }, "loan": { "$ref": "#/components/schemas/Loan" } } } } } },
          "400": { "description": "Invalid request data" },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/loans/{id}": {
      "get": {
        "tags": ["Loans"],
        "summary": "Get a single loan by ID",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Loan details", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Loan" } } } },
          "404": { "description": "Loan not found" }
        }
      },
      "put": {
        "tags": ["Loans"],
        "summary": "Update a loan",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": { "type": "number" },
                  "durationMonths": { "type": "integer" },
                  "status": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Loan updated successfully", "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" }, "loan": { "$ref": "#/components/schemas/Loan" } } } } } },
          "400": { "description": "Invalid request data" },
          "404": { "description": "Loan not found" }
        }
      },
      "delete": {
        "tags": ["Loans"],
        "summary": "Delete a loan",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Loan deleted successfully", "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" } } } } } },
          "404": { "description": "Loan not found" }
        }
      }
    },
    "/users/loans/{userId}": {
      "get": {
        "tags": ["Loans"],
        "summary": "Get all loans for a user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "userId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "List of user loans", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Loan" } } } } }
        }
      }
    },
    "/groups/loans/{groupId}": {
      "get": {
        "tags": ["Loans"],
        "summary": "Get all loans for a group",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "groupId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "List of group loans", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Loan" } } } } }
        }
      }
    },
    "/loans": {
      "get": {
        "tags": ["Loans"],
        "summary": "Get all loans",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of all loans", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Loan" } } } } }
        }
      }
    },
    "/loans/status/{status}": {
      "get": {
        "tags": ["Loans"],
        "summary": "Get loans by status",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "status", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "List of loans by status", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Loan" } } } } }
        }
      }
    },
    "/loans/{id}/approve": {
      "patch": {
        "tags": ["Loans"],
        "summary": "Approve a loan",
        "description": "Approves a loan. The approver's role and ID are taken from the authentication token.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Loan approved successfully", "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" }, "loan": { "$ref": "#/components/schemas/Loan" } } } } } },
          "400": { "description": "Invalid request data" },
          "404": { "description": "Loan not found" }
        }
      }
    },
    "/loans/{id}/deny": {
      "patch": {
        "tags": ["Loans"],
        "summary": "Deny a loan",
        "description": "Denies a loan. The approver's role and ID are taken from the authentication token.",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Loan denied successfully", "content": { "application/json": { "schema": { "type": "object", "properties": { "message": { "type": "string" }, "loan": { "$ref": "#/components/schemas/Loan" } } } } } },
          "400": { "description": "Invalid request data" },
          "404": { "description": "Loan not found" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          
          "email": { "type": "string" },
          "name": { "type": "string" },
          "phoneNumber": { "type": "string" },
          "password": { "type": "string" },
          "role": { "type": "string", "enum": ["user", "president", "treasurer"] },
          "groupId": { "type": "string" }
        },
        "required": ["email", "name"]
      },
      "Loan": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userId": { "type": "string" },
          "amount": { "type": "number" },
          "durationMonths": { "type": "integer" },
          "status": { "type": "string", "enum": ["PENDING", "APPROVED", "DENIED"] },
          "approvedBy": { "type": "string" }
        },
        "required": ["userId", "amount", "durationMonths"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
